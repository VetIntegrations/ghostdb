"""add order relation to business

Revision ID: fc4556074d80
Revises: ad97a1d9655a
Create Date: 2020-06-04 14:25:34.785481

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.sql import table, column, update, select

import ghostdb

# revision identifiers, used by Alembic.
revision = 'fc4556074d80'
down_revision = 'ad97a1d9655a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('orders', sa.Column('business_id', ghostdb.db.sqltypes.UUID(), nullable=True))
    op.create_foreign_key(op.f('fk_orders_business_id_businesses'), 'orders', 'businesses', ['business_id'], ['id'])
    fill_business_from_provder()
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('fk_orders_business_id_businesses'), 'orders', type_='foreignkey')
    op.drop_column('orders', 'business_id')
    # ### end Alembic commands ###


def fill_business_from_provder():
    order = table(
        'orders',
        column('business_id', ghostdb.db.sqltypes.UUID, sa.ForeignKey('businesses.id')),
        column('provider_id', ghostdb.db.sqltypes.UUID, sa.ForeignKey('providers.id')),
    )
    provider = table(
        'providers',
        column('id', ghostdb.db.sqltypes.UUID),
        column('business_id', ghostdb.db.sqltypes.UUID, sa.ForeignKey('businesses.id')),
    )

    stmt = select([provider.c.business_id]).where(provider.c.id == order.c.provider_id)
    update_query = update(order).values({order.c.business_id: stmt})
    op.execute(update_query)
