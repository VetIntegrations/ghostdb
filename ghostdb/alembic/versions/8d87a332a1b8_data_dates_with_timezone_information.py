"""data dates with timezone information

Revision ID: 8d87a332a1b8
Revises: 4f64f6a8b9f3
Create Date: 2020-08-26 18:50:16.480436

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '8d87a332a1b8'
down_revision = '4f64f6a8b9f3'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('appointments', 'scheduled_time',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('order_items', 'date',
               existing_type=sa.DATE(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('orders', 'invoice_date',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    # ### end Alembic commands ###

    conn = op.get_bind()
    result = conn.execute('SELECT id, timezone FROM businesses WHERE timezone IS NOT NULL;')
    for business in result:
        for table, column in (('appointments', 'scheduled_time'), ('orders', 'invoice_date')):
            op.execute(
                '''
                UPDATE {table} SET {column} = ({column} AT TIME ZONE '{tz_old}') AT TIME ZONE '{tz_new}'
                WHERE business_id='{business_id}';
                '''.format(
                    table=table,
                    column=column,
                    tz_old='US/Central',
                    tz_new=business[1],
                    business_id=business[0],
                )
            )
        op.execute(
            '''
            UPDATE
                order_items
                SET date = (date AT TIME ZONE '{tz_old}') AT TIME ZONE '{tz_new}'
            FROM orders
            WHERE
                orders.id = order_items.order_id
                AND orders.business_id='{business_id}';
            '''.format(
                tz_old='US/Central',
                tz_new=business[1],
                business_id=business[0],
            )
        )


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('orders', 'invoice_date',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('order_items', 'date',
               existing_type=sa.DateTime(timezone=True),
               type_=sa.DATE(),
               existing_nullable=True)
    op.alter_column('appointments', 'scheduled_time',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    # ### end Alembic commands ###
