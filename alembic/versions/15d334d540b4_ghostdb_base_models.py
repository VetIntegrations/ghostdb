"""ghostdb base models

Revision ID: 15d334d540b4
Revises:
Create Date: 2020-01-13 11:37:55.413019

"""
from alembic import op
import sqlalchemy as sa

import ghostdb


# revision identifiers, used by Alembic.
revision = '15d334d540b4'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('breeds',
    sa.Column('id', ghostdb.db.sqltypes.UUID(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_breeds')),
    sa.UniqueConstraint('name', name=op.f('uq_breeds_name'))
    )
    op.create_table('clients',
    sa.Column('id', ghostdb.db.sqltypes.UUID(), nullable=False),
    sa.Column('bussiness_name', sa.String(length=200), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('pms_ids', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_clients'))
    )
    op.create_table('colors',
    sa.Column('id', ghostdb.db.sqltypes.UUID(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_colors')),
    sa.UniqueConstraint('name', name=op.f('uq_colors_name'))
    )
    op.create_table('corporations',
    sa.Column('id', ghostdb.db.sqltypes.UUID(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_corporations')),
    sa.UniqueConstraint('name', name=op.f('uq_corporations_name'))
    )
    op.create_table('genders',
    sa.Column('id', ghostdb.db.sqltypes.UUID(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_genders')),
    sa.UniqueConstraint('name', name=op.f('uq_genders_name'))
    )
    op.create_table('provider_kinds',
    sa.Column('id', ghostdb.db.sqltypes.UUID(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=True),
    sa.Column('is_doctor', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_provider_kinds')),
    sa.UniqueConstraint('name', name=op.f('uq_provider_kinds_name'))
    )
    op.create_table('species',
    sa.Column('id', ghostdb.db.sqltypes.UUID(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_species')),
    sa.UniqueConstraint('name', name=op.f('uq_species_name'))
    )
    op.create_table('weightunits',
    sa.Column('id', ghostdb.db.sqltypes.UUID(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_weightunits')),
    sa.UniqueConstraint('name', name=op.f('uq_weightunits_name'))
    )
    op.create_table('businesses',
    sa.Column('id', ghostdb.db.sqltypes.UUID(), nullable=False),
    sa.Column('corporation_id', ghostdb.db.sqltypes.UUID(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('display_name', sa.String(length=200), nullable=False),
    sa.Column('open_date', sa.Date(), nullable=True),
    sa.Column('longitude', sa.Numeric(), nullable=True),
    sa.Column('latitude', sa.Numeric(), nullable=True),
    sa.Column('zip_code', sa.String(length=20), nullable=True),
    sa.Column('country', sa.String(length=50), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('state', sa.String(length=50), nullable=True),
    sa.Column('address', sa.String(length=200), nullable=True),
    sa.Column('pms_ids', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['corporation_id'], ['corporations.id'], name=op.f('fk_businesses_corporation_id_corporations')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_businesses'))
    )
    op.create_table('client_addresses',
    sa.Column('id', ghostdb.db.sqltypes.UUID(), nullable=False),
    sa.Column('client_id', ghostdb.db.sqltypes.UUID(), nullable=True),
    sa.Column('kind', sa.Enum('home', 'work', 'temporary', name='addresskind'), nullable=True),
    sa.Column('is_primary', sa.Boolean(), nullable=True),
    sa.Column('zip_code', sa.String(length=20), nullable=True),
    sa.Column('country', sa.String(length=50), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('state', sa.String(length=50), nullable=True),
    sa.Column('address', sa.String(length=200), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], name=op.f('fk_client_addresses_client_id_clients')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_client_addresses'))
    )
    op.create_table('client_contacts',
    sa.Column('id', ghostdb.db.sqltypes.UUID(), nullable=False),
    sa.Column('client_id', ghostdb.db.sqltypes.UUID(), nullable=True),
    sa.Column('kind', sa.Enum('mobile', 'home', 'work', 'skype', name='contactkind'), nullable=True),
    sa.Column('is_primary', sa.Boolean(), nullable=True),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('value', sa.String(length=50), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], name=op.f('fk_client_contacts_client_id_clients')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_client_contacts'))
    )
    op.create_table('corporation_integrations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('consolidator_id', ghostdb.db.sqltypes.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('module', sa.Enum('vetsuccess', name='integrationmodules'), nullable=False),
    sa.Column('auth_credentials', sa.JSON(), nullable=True),
    sa.Column('is_enable', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['consolidator_id'], ['corporations.id'], name=op.f('fk_corporation_integrations_consolidator_id_corporations')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_corporation_integrations'))
    )
    op.create_table('pets',
    sa.Column('id', ghostdb.db.sqltypes.UUID(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('registration_date', sa.Date(), nullable=True),
    sa.Column('birthdate', sa.Date(), nullable=True),
    sa.Column('breed_id', ghostdb.db.sqltypes.UUID(), nullable=True),
    sa.Column('color_id', ghostdb.db.sqltypes.UUID(), nullable=True),
    sa.Column('gender_id', ghostdb.db.sqltypes.UUID(), nullable=True),
    sa.Column('species_id', ghostdb.db.sqltypes.UUID(), nullable=True),
    sa.Column('microchip', sa.String(length=20), nullable=True),
    sa.Column('microchip_registered', sa.Boolean(), nullable=True),
    sa.Column('neutered', sa.Boolean(), nullable=True),
    sa.Column('deceased_date', sa.Date(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('is_deceased', sa.Boolean(), nullable=True),
    sa.Column('is_dnr', sa.Boolean(), nullable=True),
    sa.Column('is_mixed', sa.Boolean(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('weight', sa.Numeric(), nullable=True),
    sa.Column('weight_unit_id', ghostdb.db.sqltypes.UUID(), nullable=True),
    sa.Column('pms_ids', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['breed_id'], ['breeds.id'], name=op.f('fk_pets_breed_id_breeds')),
    sa.ForeignKeyConstraint(['color_id'], ['colors.id'], name=op.f('fk_pets_color_id_colors')),
    sa.ForeignKeyConstraint(['gender_id'], ['genders.id'], name=op.f('fk_pets_gender_id_genders')),
    sa.ForeignKeyConstraint(['species_id'], ['species.id'], name=op.f('fk_pets_species_id_species')),
    sa.ForeignKeyConstraint(['weight_unit_id'], ['weightunits.id'], name=op.f('fk_pets_weight_unit_id_weightunits')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_pets')),
    sa.UniqueConstraint('microchip', name=op.f('uq_pets_microchip'))
    )
    op.create_table('business_contacts',
    sa.Column('id', ghostdb.db.sqltypes.UUID(), nullable=False),
    sa.Column('business_id', ghostdb.db.sqltypes.UUID(), nullable=False),
    sa.Column('kind', sa.Enum('phone', 'email', 'website', name='contactkind'), nullable=True),
    sa.Column('is_primary', sa.Boolean(), nullable=True),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('value', sa.String(length=100), nullable=False),
    sa.Column('note', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['business_id'], ['businesses.id'], name=op.f('fk_business_contacts_business_id_businesses')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_business_contacts'))
    )
    op.create_table('pet_owners',
    sa.Column('client_id', ghostdb.db.sqltypes.UUID(), nullable=False),
    sa.Column('pet_id', ghostdb.db.sqltypes.UUID(), nullable=False),
    sa.Column('is_primary', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], name=op.f('fk_pet_owners_client_id_clients')),
    sa.ForeignKeyConstraint(['pet_id'], ['pets.id'], name=op.f('fk_pet_owners_pet_id_pets')),
    sa.PrimaryKeyConstraint('client_id', 'pet_id', name=op.f('pk_pet_owners'))
    )
    op.create_table('providers',
    sa.Column('id', ghostdb.db.sqltypes.UUID(), nullable=False),
    sa.Column('business_id', ghostdb.db.sqltypes.UUID(), nullable=True),
    sa.Column('kind_id', ghostdb.db.sqltypes.UUID(), nullable=True),
    sa.Column('first_name', sa.String(length=200), nullable=True),
    sa.Column('last_name', sa.String(length=200), nullable=True),
    sa.Column('is_user', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('pms_ids', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['business_id'], ['businesses.id'], name=op.f('fk_providers_business_id_businesses')),
    sa.ForeignKeyConstraint(['kind_id'], ['provider_kinds.id'], name=op.f('fk_providers_kind_id_provider_kinds')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_providers'))
    )
    op.create_table('appointments',
    sa.Column('id', ghostdb.db.sqltypes.UUID(), nullable=False),
    sa.Column('business_id', ghostdb.db.sqltypes.UUID(), nullable=True),
    sa.Column('provider_id', ghostdb.db.sqltypes.UUID(), nullable=True),
    sa.Column('pet_id', ghostdb.db.sqltypes.UUID(), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('scheduled_time', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('ADMITTED', 'CANCELLED', 'CHECKED_IN', 'CHECKING_OUT', 'COMPLETED', 'CONFIRMED', 'DAYCARE', 'INPROGRESS', 'MEDBOARD', 'NOSHOW', 'PENDING', 'PLANNED', 'LATE', 'RESERVATION', 'KEPT', 'RESCHEDULED', name='status'), nullable=True),
    sa.Column('reason', sa.String(length=500), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['business_id'], ['businesses.id'], name=op.f('fk_appointments_business_id_businesses')),
    sa.ForeignKeyConstraint(['pet_id'], ['pets.id'], name=op.f('fk_appointments_pet_id_pets')),
    sa.ForeignKeyConstraint(['provider_id'], ['providers.id'], name=op.f('fk_appointments_provider_id_providers')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_appointments'))
    )
    op.create_table('provider_contacts',
    sa.Column('id', ghostdb.db.sqltypes.UUID(), nullable=False),
    sa.Column('provider_id', ghostdb.db.sqltypes.UUID(), nullable=True),
    sa.Column('kind', sa.Enum('phone', 'email', 'website', name='contactkind'), nullable=True),
    sa.Column('is_primary', sa.Boolean(), nullable=True),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('value', sa.String(length=100), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['provider_id'], ['providers.id'], name=op.f('fk_provider_contacts_provider_id_providers')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_provider_contacts'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('provider_contacts')
    op.drop_table('appointments')
    op.drop_table('providers')
    op.drop_table('pet_owners')
    op.drop_table('business_contacts')
    op.drop_table('pets')
    op.drop_table('corporation_integrations')
    op.drop_table('client_contacts')
    op.drop_table('client_addresses')
    op.drop_table('businesses')
    op.drop_table('weightunits')
    op.drop_table('species')
    op.drop_table('provider_kinds')
    op.drop_table('genders')
    op.drop_table('corporations')
    op.drop_table('colors')
    op.drop_table('clients')
    op.drop_table('breeds')
    # ### end Alembic commands ###
